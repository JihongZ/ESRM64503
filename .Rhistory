items[[item]]$dataVector = c(items[[item]]$dataVector, dataMat[unit,item])
if (dataMat[unit, item] == 0){
items[[item]]$lowerBoundZ[unit] = -Inf
items[[item]]$upperBoundZ[unit] = 0
} else {
items[[item]]$lowerBoundZ[unit] = 0
items[[item]]$upperBoundZ[unit] = Inf
}
}
}
}
names(units) = unitNames
cat("Entering Estimation Chains")
cat(" ")
totalIter = 0
chain = 1
classProbs = MCMCpack::rdirichlet(n = 1, alpha = classProbsPrior)
unitClasses = sample(x = 1:nClasses, size = nUnits, replace = TRUE, prob = classProbs)
classProbs
unitClasses = sample(x = 1:nClasses, size = nUnits, replace = TRUE, prob = classProbs)
unitClasses
if (dpmOptions$parallel){
clusterExport(cl = dpmOptions$cl, varlist = c("items", "masterX", "unitClasses"), envir = environment())
items = parLapply(cl=dpmOptions$cl, X = items, fun=drawItemParameters, masterX = masterX, unitClasses = unitClasses)
} else {
items = lapply(X = items, FUN = drawItemParameters, masterX = masterX, unitClasses = unitClasses)
}
lastIterNum = 0
iter = 1
units = units; items = items; nClasses = nClasses; classProbs = classProbs;
dpmOptions = dpmOptions; masterX = masterX
classVector = NULL
debug(fun = updateUnits)
estimatedNP = estimateDPM(dataMat = simulated$data, qmatrix = qmatrix, dpmOptions = dpmControl(seed=1, parallel=FALSE))
browser(updateUnit)
browser(updateUnit)
classVector = sapply(X = units, FUN = updateUnit, items = items, predictorMatrix = masterX,
nClasses = nClasses, classProbs = classProbs)
debug(fun = updateUnit)
estimatedNP = estimateDPM(dataMat = simulated$data, qmatrix = qmatrix, dpmOptions = dpmControl(seed=1, parallel=FALSE))
unitClassProb
unitClassProb
unitClassProb
unitClass
?poly
x = 1:10
poly(x,2)
poly
temp = poly(x,2)
cor(temp)
library(devtools)
ls
dir()
getwd()
setwd("/Users/jonathantemplin/Google Drive")
dir()
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work")
dir()
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/")
dir()
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate")
dir()
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/R Packages")
dir()
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/R Packages/HomeworkeR")
create(path = getwd())
create_package(path = getwd())
setwd("/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/R Packages/EPSY905R")
create_package(path = getwd())
devtools::load_all(".")
lecture01data01 = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Old Courses/EPSY 905 - Multivariate/Lectures/01 Introduction/R/mv16epsy905_lecture01.csv", header = TRUE)
devtools::use_data(lecture01data01)
View(lecture01data01)
devtools::load_all(".")
library(EPSY905R)
?lecture01data01
devtools::load_all(".")
data("lecture01data01")
library(EPSY905R)
data01 = data("lecture01data01")
data01$female[data01$sex=="F"]=1
data01$female[data01$sex=="M"]=0
data01
data("lecture01data01")
library(EPSY905R)
data("lecture01lecture01data01")
data("lecture01data01")
lecture01data01$female[lecture01data01$sex=="F"]=1
lecture01data01$female[lecture01data01$sex=="M"]=0
pairs(~female+heightIN+weightLB,data=lecture01data01)
par(mfrow=c(1,2)) #SET PLOT TO SHOW TWO PICTURES IN ONE ROW
hist(lecture01data01$weightLB,main="Weight",xlab="Pounds")
hist(lecture01data01$heightIN,main="Height",xlab="Inches")
par(mfrow=c(1,1)) #SET PLOT TO SHOW ONE PICTURE
summary(lecture01data01$heightIN)
summary(lecture01data01$weightLB)
summary(lecture01data01$female)
var(cbind(lecture01data01$heightIN,lecture01data01$weightLB,lecture01data01$female))
correlationmatix = cor(cbind(lecture01data01$heightIN,lecture01data01$weightLB,lecture01data01$female))
write.csv(correlationmatix,file="mycorr.csv")
model01 = lm(weightLB~1,data=lecture01data01)
summary(model01)
anova(model01)
model02 = lm(weightLB~heightIN,data=lecture01data01)
summary(model02)
anova(model02)
anova(model01,model02)
lecture01data01$heightIN_MC = lecture01data01$heightIN - mean(lecture01data01$heightIN)
model02a = lm(weightLB~heightIN_MC,data=lecture01data01)
summary(model02a)
anova(model02a)
anova(model01,model02a)
anova(model02,model02a)
model03 = lm(weightLB~female,data=lecture01data01)
summary(model03)
anova(model03)
anova(model01,model03)
model04 = lm(weightLB~heightIN_MC+female,data=lecture01data01)
summary(model04)
anova(model04)
anova(model02a,model04)
anova(model03,model04)
anova(model01,model04)
model05 = lm(weightLB~heightIN_MC+female+female*heightIN_MC,data=lecture01data01)
summary(model05)
anova(model05)
anova(model04,model05)
devtools::load_all(".")
devtools::load_all(".")
data("lecture01data01")
dataSexHeightWeight = lecture01data01
devtools::use_data(dataSexHeightWeight)
devtools::load_all(".")
devtools::load_all(".")
data("lecture02data01")
dataTestExperiment = lecture02data01
devtools::use_data(dataTestExperiment)
devtools::load_all(".")
library(EPSY905R)
dataPerfIQ = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Old Courses/EPSY 905 - Multivariate/Lectures/04 Maximum Likelihood/mv16epsy905_lecture04/mv16epsy905_lecture04.csv", header = TRUE)
View(dataPerfIQ)
devtools::use_data(dataPerfIQ)
devtools::load_all(".")
data("dataPerfIQ")
data01 = dataPerfIQ
model01 = gls(iq~1,data=data01,method="ML")
summary(model01)
devtools::load_all(".")
model01 = gls(iq~1,data=data01,method="ML")
library(nlme)
model01 = gls(iq~1,data=data01,method="ML")
summary(model01)
names(model01)
anova(model01)
devtools::load_all(".")
dataSAT = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Old Courses/EPSY 905 - Multivariate/Lectures/05 Matrix Algebra and MVN/mv16epsy905_lecture05/mv16epsy905_lecture05.csv", header = TRUE)
dataSAT$id = 1:nrow(dataSAT)
dataSAT = dataSAT[c("id", "SATV", "SATM")]
devtools::use_data(dataSAT)
devtools::load_all(".")
dataMath = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Online Lectures/Rpacked/07 Multivariate Empty Models/mv16epsy905_lecture06/mathdata.csv", header = TRUE)
dataMath = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Online Lectures/Rpacked/07 Multivariate Empty Models/mv16epsy905_lecture06/mathdata.csv", header = TRUE, na.strings = ".")
View(dataMath)
devtools::use_data(dataMath)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(EPSY905R)
data("dataMath")
model01.syntax = "
#Variances:
perf ~~ perf
#Means:
perf ~ 1
"
model01.fit = sem(model01.syntax, data=dataMath, mimic="MPLUS", fixed.x=TRUE, estimator = "MLR")
library(EPSY905R)
?fields::plot.surface
devtools::load_all(".")
?plot_bvn_surface
?plot_bvn_surface
plot_bvn_surface(meanvec = matrix(c(0,0)), nrow = 2, ncol = 1),
covmat = diag(2), type = "c", xlab = "x",
ylab = "y", zlab = "f(x,y)", main = "plot")
devtools::load_all(".")
?plot_bvn_surface
plot_bvn_surface(meanvec = matrix(c(0,0), nrow = 2, ncol = 1),
covmat = diag(2), type = "c", xlab = "x",
ylab = "y", zlab = "f(x,y)", main = "plot")
library(fields)
library(mnormt)
plot_bvn_surface(meanvec = matrix(c(0,0), nrow = 2, ncol = 1),
covmat = diag(2), type = "c", xlab = "x",
ylab = "y", zlab = "f(x,y)", main = "plot")
?plot_bvn_surface
plot_bvn_surface(meanvec = matrix(c(0,0), nrow = 2, ncol = 1),
covmat = diag(2), type = "n", xlab = "x",
ylab = "y", zlab = "f(x,y)", main = "drape plot")
plot_bvn_surface(meanvec = matrix(c(0,0), nrow = 2, ncol = 1),
covmat = diag(2), type = "p", xlab = "x",
ylab = "y", zlab = "f(x,y)", main = "drape plot")
devtools::load_all(".")
library(EPSY905R)
data("dataMath")
dataMath$female = dataMath$gender
dataMath = dataMath[-c("gender")]
dataMath$gender = NULL
devtools::load_all(".")
devtools::use_data(dataMath)
devtools::use_data(dataMath, overwrite = TRUE)
View(dataMath)
devtools::load_all(".")
devtools::load_all(".")
library(EPSY905R)
data("dataMath")
data01 = dataMath
par(mfrow = c(1,2))
boxplot(data01$cc, main="Boxplot of College Experience (CC)")
hist(data01$cc, main = "Histogram of College Experience (CC)", xlab = "CC")
par(mfrow = c(1,1))
data01$cc10 = data01$cc - 10
install.packages("mice")
dataExercise = read.csv(file = "/Users/jonathantemplin/Google Drive/!01. Current Work/02. Teaching/EPSY 905 - Multivariate/Online Lectures/Rpacked/14 RM and MANOVA vs LME/R/mv16epsy905_lecture12.csv", header = TRUE)
View(dataExercise)
View(dataExercise)
install.packages("blavaan")
dataExercise
devtools::use_data(dataExercise)
library(EPSY905R)
install.packages("mclust")
install.packages("datasets")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(EPSY905R)
library(EPSY905R)
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
MultiWide2Long = function(data, idvars, varlist, timevals = 1:length(varlist[[1]]), timevar = "time"){
newData = NULL
for (var in 1:length(varlist)){
temp = reshape(data = data[c(idvars, varlist[[var]])], idvars = idvars, varying = varlist[[var]],
v.names = names(varlist)[var], direction = "long")
# for first reformat data frame to be correct type
if (var == 1) {
if (is.na(timevar)) {
temp = temp[c(idvars, names(varlist)[var])]
}
newData = temp
} else {
newData = cbind(newData, temp[3])
}
}
return(newData)
}
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
IndoMeth
Indometh
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
## times need not be numeric
df <- data.frame(id = rep(1:4, rep(2,4)),
visit = I(rep(c("Before","After"), 4)),
x = rnorm(4), y = runif(4))
df
## times need not be numeric
df <- data.frame(id = rep(1:4, rep(2,4)),
visit = I(rep(c("Before","After"), 4)),
x = rnorm(4), y = runif(4))
state.x77
wide$conc.9 = runif(n = 6, min = 0, max = .05)
wide
long <- MultiWide2Long(data = wide, idvars = "Subject",
varlist =
list(ConcLE2 = c("conc.0.25", "conc.0.5", "conc.0.75", "conc.1", "conc.1.25", "conc.2"),
ConcGT2 = c("conc.3", "conc.4", "conc.5", "conc.6", "conc.8", "conc.9")),
timevals = 1:6, timevar = "time")
MultiWide2Long = function(data, idvars, varlist, timevals = 1:length(varlist[[1]]), timevar = "time"){
newData = NULL
for (var in 1:length(varlist)){
temp = reshape(data = data[c(idvars, varlist[[var]])], idvar = idvars, varying = varlist[[var]],
v.names = names(varlist)[var], direction = "long")
# for first reformat data frame to be correct type
if (var == 1) {
if (is.na(timevar)) {
temp = temp[c(idvars, names(varlist)[var])]
}
newData = temp
} else {
newData = cbind(newData, temp[3])
}
}
return(newData)
}
long <- MultiWide2Long(data = wide, idvars = "Subject",
varlist =
list(ConcLE2 = c("conc.0.25", "conc.0.5", "conc.0.75", "conc.1", "conc.1.25", "conc.2"),
ConcGT2 = c("conc.3", "conc.4", "conc.5", "conc.6", "conc.8", "conc.9")),
timevals = 1:6, timevar = "time")
long
View(wide)
install.packages("lavaanPlot")
library(EPSY905R)
library(EPSY905R)
?MultiWide2Long
library(EPSY905R)
devtools::load_all(".")
library(EPSY905R)
library(EPSY905R)
MultiWide2Long
devtools::load_all(".")
library(EPSY905R)
library(EPSY905R)
library(EPSY905R)
library(EPSY905R)
MultiWide2Long = function(data, idvars, varlist, timevals = 1:length(varlist[[1]]), timevar = "time"){
newData = NULL
for (var in 1:length(varlist)){
temp = reshape(data = data[c(idvars, varlist[[var]])], idvar = idvars, varying = varlist[[var]],
v.names = names(varlist)[var], direction = "long")
# for first reformat data frame to be correct type
if (var == 1) {
if (is.na(timevar)) {
temp = temp[c(idvars, names(varlist)[var])]
}
newData = temp
} else {
newData = cbind(newData, temp[3])
}
}
return(newData)
}
library(EPSY905R)
MultiWide2Long = function(data, idvars, varlist, timevals = 1:length(varlist[[1]]), timevar = "time"){
newData = NULL
for (var in 1:length(varlist)){
temp = stats::reshape(data = data[c(idvars, varlist[[var]])], idvar = idvars, varying = varlist[[var]],
v.names = names(varlist)[var], direction = "long")
# for first reformat data frame to be correct type
if (var == 1) {
if (is.na(timevar)) {
temp = temp[c(idvars, names(varlist)[var])]
}
newData = temp
} else {
newData = cbind(newData, temp[3])
}
}
return(newData)
}
MultiWide2Long()
MultiWide2Long
devtools::run_examples()
library(EPSY905R)
devtools::run_examples()
plot_bvn_surface = function(meanvec, covmat, type, xlab, ylab, zlab, main){
#creating values for x and y axes based on estimated values from model
x = matrix(seq(meanvec[1,1]-4*sqrt(covmat[1,1]), meanvec[1,1]+4*sqrt(covmat[1,1]), .1*sqrt(covmat[1,1])), ncol=1)
y = matrix(seq(meanvec[2,1]-4*sqrt(covmat[2,2]), meanvec[2,1]+4*sqrt(covmat[2,2]), .1*sqrt(covmat[2,2])), ncol=1)
z = matrix(0,nrow = dim(x)[1],ncol = dim(y)[1])
for (i in 1:dim(x)[1]){
for (j in 1:dim(y)[1]){
z[i,j] = mnormt::dmnorm(c(x[i,1],y[j,1]),mean = t(meanvec), varcov = covmat, log = FALSE)
}
}
grid.list=list(x = x, y = y)
z1 = z[1:dim(x)[1]-1,1:dim(y)[1]-1]
mygrid = fields::make.surface.grid(grid.list)
out = list(x = grid.list$x, y = grid.list$y, z = z)
fields::plot.surface(out,type=type, xlab=xlab, ylab=ylab, zlab=zlab, main=main)
}
devtools::run_examples()
data("dataPerfIQ")
dataPerfIQ
devtools::load_all(".")
library(EPSY905R)
devtools::run_examples()
library(EPSY905R)
devtools::use_build_ignore(files = ".git")
usethis::use_build_ignore(files = ".git")
devtools::load_all(".")
library(EPSY905R)
usethis::use_build_ignore(files = c(".git", ".DS_Store"))
usethis::use_build_ignore(files = c(".git", ".DS_Store", ".Rhistory"))
load("~/Documents/repos/EPSY905R/data/dataPerfIQ.rda")
View(dataPerfIQ)
data("dataPerfIQ")
dataPerfIQ
library(devtools)
check()
library(EPSY905R)
library(EPSY905R)
library(EPSY905R)
library(EPSY905R)
data("dataPerfIQ")
temp = dataPerfIQ
dataIQPerf = temp
use_data(dataIQPerf)
library(EPSY905R)
load("~/Documents/repos/EPSY905R/data/dataIQPerf.rda")
library(EPSY905R)
load("~/Documents/repos/EPSY905R/data/dataIQPerf.rda")
View(dataIQPerf)
library(EPSY905R)
message("There will be four homeworks in total.")
message("
There will be four homeworks in total.
ddd")
message("
There will be four homeworks in total.
Next homework will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
message("
There will be four homeworks in total for ESRM 64503.
Next homework will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
message("
There will be four homeworks in total for ESRM 64503.
Next homework (Homework 1) will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
message("
There will be four homeworks in total for ESRM 64503.
You can work on HW0 now, please click the following link to have access:
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/HWs/HW_demo.html
Next homework (Homework 1) will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
devtools::load_all(".")
homework
#' A Cat Function
#'
#' This function allows you to express your love of cats.
#' @param love Do you love cats? Defaults to TRUE.
#' @keywords cats
#' @export
#' @examples
#' cat_function()
homework <- function(){
message("
There will be four homeworks in total for ESRM 64503.
You can work on HW0 now, please click the following link to have access:
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/HWs/HW_demo.html
Next homework (Homework 1) will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
}
homework()
library(pak)
#' A Function to check homework
#'
#' This function allows you to check the progress of homework
#' @keywords homework
#' @export
#' @examples
#' homework()
homework <- function(){
package_version("ESRM64503")
message("
There will be four homeworks in total for ESRM 64503.
You can work on HW0 now, please click the following link to have access:
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/HWs/HW_demo.html
Next homework (Homework 1) will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
}
homework()
package_version("ggplot2")
devtools::package_info("ggplot2")
devtools::package_info("ESRM64503")
#' A Function to check homework
#'
#' This function allows you to check the progress of homework
#' @keywords homework
#' @export
#' @examples
#' homework()
homework <- function(){
devtools::package_info("ESRM64503")
message("
There will be four homeworks in total for ESRM 64503.
You can work on HW0 now, please click the following link to have access:
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/HWs/HW_demo.html
Next homework (Homework 1) will be posted on 09/09/2024.
For more details, please refer to
https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/")
}
homework()
devtools::load_all(".")
homework()
devtools::load_all(".")
?homework
devtools::load_all(".")
?homework
homework()
devtools::load_all(".")
devtools::load_all(".")
homework()
?homework
devtools::load_all(".")
?homework
devtools::load_all(".")
homework()
